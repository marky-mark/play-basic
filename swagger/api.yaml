swagger: '2.0'
info:
  title: Play Basic
  description: |
    Storage of the Stuff
  version: '0.1'
  contact:
      name: Mark Kelly
      email: mkelly28@tcd.ie
externalDocs:
  description: "Github repo"
  url: "https://github.com/marky-mark/"

basePath: /api
schemes:
  - https

produces:
  - application/json

paths:

  /sales-channels/{sales_channel_id}/infos:
      get:
        summary: Return all infos
        parameters:
          - $ref: '#/parameters/SalesChannelId'
          - $ref: '#/parameters/FlowId'
          - $ref: '#/parameters/AcceptEncoding'
          - $ref: '#/parameters/IfModifiedSince'
        tags: Info API
        produces:
          - application/json
          - application/problem+json
          - application/zip
        responses:
          200:
            description: Successful
            schema:
              $ref: '#/definitions/Info'
          400:
            description: Bad Request
          401:
            description: Unauthorized
          403:
            description: Forbidden
          404:
            description: Not Found

      post:
        summary: Create new Info
        parameters:
          - $ref: '#/parameters/SalesChannelId'
          - $ref: '#/parameters/FlowId'
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/Info'
        tags: Info API
        produces:
          - application/json
          - application/problem+json
        responses:
          201:
            description: Created
          400:
            description: Bad Request
          401:
            description: Unauthorized
          403:
            description: Forbidden

  /batch/sales-channels/{sales_channel_id}/infos:
      post:
        summary: Create Infos via batch
        parameters:
          - $ref: '#/parameters/SalesChannelId'
          - $ref: '#/parameters/FlowId'
          - $ref: '#/parameters/XRequestGroupId'
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/InfoBatch'
        produces:
          - application/json
          - application/problem+json
        responses:
          202:
            description: Accepted for asynchronous completion - location URL provided in response header to get further information
            schema:
              $ref: '#/definitions/UpdateInfos'
          400:
            description: Bad Request
            schema:
              type: array
              items:
                $ref: '#/definitions/Problem'
          429:
            description: |
              Too many requests - the caller has issued too many requests, and is being rate limited.

  /sales-channels/{sales_channel_id}/infos/{info_id}:
    put:
      summary: Update an existing rule
      parameters:
        - $ref: '#/parameters/SalesChannelId'
        - $ref: '#/parameters/FlowId'
        - $ref: '#/parameters/InfoId'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Info'
      tags: Info API
      produces:
        - application/json
        - application/problem+json
      responses:
        200:
          description: Successful
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    get:
      summary: Return info by id
      parameters:
        - $ref: '#/parameters/SalesChannelId'
        - $ref: '#/parameters/FlowId'
        - $ref: '#/parameters/InfoId'
      tags: Info API
      produces:
        - application/json
        - application/problem+json
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Info'
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found

parameters:
    FlowId:
      name: X-Flow-Id
      description: |
        A custom header that will be passed onto any further requests and can be used for diagnosing.
      in: header
      type: string
      required: false

    TenantId:
      name: X-Tenant-Id
      description: |
        A custom header for the identification of the tenant. The exact nature of tenants is yet to be defined WRT this API.
      in: header
      type: string
      format: uuid
      required: true

    XRequestGroupId:
      name: X-Request-Group-Id
      description: |
        > Customer header to allow a client specify a group correlation Id that can be used across several updates.
        > This can be used then to track summary information regarding all the requests in that group.
        > It is the responsibility of the client to ensure the correct value is specified for requests in the same group, and it is also the client's responsibility to ensure correct uniqueness, etc., of this Identifier.
        > This value is considered unique per tenant, multiple tenants can use the same value without collision.
      in: header
      type: string
      format: uuid
      required: false

    Authorization:
      name: Authorization
      description: Bearer authorization token
      in: header
      type: string
      required: true

    AcceptEncoding:
      name: Accept-Encoding
      in: header
      type: string
      required: false

    SalesChannelId:
      name: sales_channel_id
      description: Sales channel unique identifier from business partner service
      in: path
      type: string
      format: uuid
      required: true

    InfoId:
      name: info_id
      description: A unique identifier. UUID identifying record
      in: path
      type: string
      format: uuid
      required: true

    IfModifiedSince:
      name: If-Modified-Since
      description: The last modification date of a category tree on the client side
      in: header
      type: string
      format: date-time
      required: false

definitions:

  InfoBatch:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Info'

  Info:
    type: object
    required:
      - name
      - data
      - meta
    properties:
      id:
        type: string
        format: uuid
        description: Unique rule Id
      name:
        type: string
        description: A name of the info
      data:
        type: object
        description: Json stuff
      meta:
        type: array
        description: array of things
        minItems: 0
        items:
          type: string

  Problem:
    type: object
    required:
      - title
      - status
      - detail
    properties:
      title:
        type: string
        description: A short summary of the problem type.
      status:
        type: integer
        format: int32
        description: The HTTP status code generated by the origin server for this occurrence of the problem
      detail:
        type: string
        description: Detail of the problem
      tracking_id:
        type: string
        format: uuid
        description: |
          A server-generated arbitrary identifier, that when present is associated with the specific instance of this
          problem. This identifier can be used to correlate the problem with its occurence in the service's logs, etc.

  UpdateInfos:
    type: object
    required:
      - tracking_info
    properties:
      tracking_id:
        type: string